@model Model.FormQuestionsModel
@{ 
    string isDisabled = "disabled";
    if (Model.taskDTO.taskState_id == "0")
    {
        isDisabled = "";
    }
}
@foreach (var iQuestion in Model.formQuestions)
{
    string id_form = "questionForm" + iQuestion.id_taskQuestion;
    string question_id = "question" + iQuestion.id_taskQuestion;
    string id_taskQuestion = iQuestion.id_taskQuestion;
    string question = iQuestion.question;
    string questionType_id = iQuestion.questionType_id;
    string attribute_id = iQuestion.generalAttributeList;
    string isChecked = iQuestion.isRequired == "True" ? "checked" : "";
    SelectList _QuestionTypesSelect;
    List<SelectListItem> _TypeSelectList = new List<SelectListItem>();
    foreach (var iType in Model.questionsTypes)
    {
        _TypeSelectList.Add(new SelectListItem { Text = iType.name, Value = iType.id_questionType });
    }
    _QuestionTypesSelect = new SelectList(_TypeSelectList, "Value", "Text", questionType_id);

    SelectList _AttributesSelect;
    List<SelectListItem> _AttributeListSelectList = new List<SelectListItem>();
    foreach (var iAttribute in Model.attributes)
    {
        if (iAttribute.type_id == "4")
        {
            _AttributeListSelectList.Add(new SelectListItem { Text = iAttribute.name, Value = iAttribute.id_attribute });
        }
    }
    _AttributesSelect = new SelectList(_AttributeListSelectList, "Value", "Text", attribute_id);
    <tr id="@question_id">
        <td style="font-size:16px; width:3%">
            @if (Model.taskDTO.taskState_id == "0")
            {
                <span class="handle-form">
                    <i class="fa fa-ellipsis-v"></i>
                    <i class="fa fa-ellipsis-v"></i>
                </span>
            }
            else
            {
                <span class="no-handle-form"></span>
            }
        </td>
        <td>
            @using (Ajax.BeginForm("_EditFormQuestion", "Tasks", new AjaxOptions { HttpMethod = "PUT", OnSuccess = "QuestionEditedSuccess", OnFailure = "QuestionEditedFailure" }, new { id = @id_form }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => id_taskQuestion)
            }
            @Html.TextBoxFor(model => question, new { @class = "form-control", @type = "text", form=id_form })
        </td>
        <td>
            @Html.DropDownListFor(model => questionType_id, _QuestionTypesSelect, new { @class = "", @form=id_form, @onchange = "onQuestionTypeChanged(this)"})
            @if (questionType_id == "3")
            {
                @Html.DropDownListFor(model => attribute_id, _AttributesSelect, new { @class = "", @form = id_form})
            }
            else
            {
                @Html.DropDownListFor(model => attribute_id, _AttributesSelect, new { @class = "", @form = id_form, @style = "display:none" })
            }
        </td>
        <td>
            <div class="form-group">
                <div class="checkbox" style="margin:0px">
                    <label style="margin-left:15px">
                        <input type="checkbox" @isChecked class="colored-success" name="isRequired" id="isRequired" form="@id_form">
                        <span class="text"></span>
                    </label>
                </div>
            </div>
        </td>
        <td>
            <button class="btn btn-sky btn-sm" type="button" @isDisabled><span class="fa fa-cog"></span></button>
        </td>
        <td style="width:12%">
            <button class="btn btn-sky btn-sm" style="margin-right:10px" data-toggle="tooltip" data-placement="top" title="Guardar" type="submit" form="@id_form" @isDisabled>
                <span class="glyphicon glyphicon-floppy-saved"></span>
            </button>
            <a class="btn btn-danger btn-sm btn-remove" data-toggle="tooltip" data-placement="top" title="Eliminar" onclick="deleteFormTask('@id_taskQuestion',this)" @isDisabled>
                <span class="glyphicon glyphicon-minus"></span>
            </a>
        </td>
    </tr>
}


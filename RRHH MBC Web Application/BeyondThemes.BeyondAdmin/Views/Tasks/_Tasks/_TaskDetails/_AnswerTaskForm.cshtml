@model Model.TaskDetailsModel
@{ 
    DataTransferObjects.TaskFormDTO form = Model.taskProvider.getTaskForm(Model.task.id_task).Result;
    List<DataTransferObjects.TaskQuestionDTO> questions = Model.taskProvider.getFormQuestions(form.id_taskForm).Result;
}
<div class="modal fade" id="modal_answerTask" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("_AnswerTaskForm", "Tasks", new AjaxOptions { HttpMethod = "POST", OnSuccess = "TaskNotificationAddedSucces", OnFailure = "TaskNotificationAddedFailure" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.task.id_task)

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Añadir Notificación</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            @foreach(var question in questions)
                            {
                                List<DataTransferObjects.QuestionTypeDTO> questionTypes = Model.taskProvider.getQuestionTypes().Result;
                                DataTransferObjects.QuestionTypeDTO questionType;
                                foreach(var iQuestionType in questionTypes)
                                {
                                    if (iQuestionType.id_questionType == question.questionType_id)
                                    {
                                        questionType = iQuestionType;
                                    }
                                }
                                <label class="control-label"><strong>@Html.Raw(question.question)</strong></label>

                                <input class="form-control" type="@questionType.name" />
                            }
                            @*<div class="form-group">
                                @Html.LabelFor(m => m.message)
                                @Html.TextAreaFor(m => m.message, new { @class = "form-control", @placeholder = "", @rows = "5" })
                                @Html.ValidationMessageFor(m => m.message, "", new { @class = "text-danger" })
                            </div>*@
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Responder</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            }
        </div>
    </div>
</div>


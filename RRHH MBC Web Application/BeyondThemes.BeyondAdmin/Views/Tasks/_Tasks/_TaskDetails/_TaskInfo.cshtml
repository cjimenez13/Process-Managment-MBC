@model Model.TaskDetailsModel
@{ 
    string createdByName = Model.createdBy.name + " " + Model.createdBy.fLastName + " " + Model.createdBy.sLastName;
    string daysName = " días ";
    string hoursName = " horas ";
    if (Model.task.hoursAvailable == "1")
    {
        hoursName = " hora ";
    }
    if (Model.task.daysAvailable == "1")
    {
        daysName = " día ";
    }
    string duration = Model.task.daysAvailable + daysName + Model.task.hoursAvailable + hoursName;
}
<div class="widget radius-bordered">
    <div class="widget-header  bordered-bottom bordered-sky">
        <span class="widget-caption">Información Tarea</span>
        <div class="widget-buttons">
            <button class="btn btn-sky btn-sm" data-toggle="modal" data-target="#modal_editTask" type="button">Editar</button>
        </div>
        <div class="widget-buttons" >
            <a data-toggle="collapse" onclick="expandTasks(this)">
                <i class="fa fa-expand danger"></i>
            </a>
        </div>
    </div>
    <div class="widget-body">
        <div class="row">
            <div class="col-xs-12">
                <div class="row" style="font-size:14px; margin-top:25px; margin-bottom:10px">
                    <div class="col-md-6">
                        <dl class="dl-horizontal">
                            <dt>Nombre</dt><dd>@Html.Raw(Model.task.name)</dd>
                            <dt>Agregado por </dt><dd>@Html.Raw(createdByName)</dd>
                            <dt>Tipo</dt><dd>@Html.Raw(Model.taskType.taskName)</dd>
                            <dt>Duración</dt><dd>@Html.Raw(duration) </dd>
                            <dt>Estado</dt><dd><span class="label" style="background-color:@Html.Raw(Model.taskState.state_color)">@Html.Raw(Model.taskState.state_name)</span></dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="dl-horizontal">
                            <dt>Fecha de creación</dt><dd>@Html.Raw(Model.task.createdDate)</dd>
                            <dt>Fecha a iniciar</dt><dd>@Html.Raw(Model.task.beginDate == null || Model.task.beginDate == "" ? "-" : Model.task.beginDate)</dd>
                            <dt>Fecha a finalizar</dt><dd>@Html.Raw(Model.task.finishDate == null || Model.task.finishDate == "" ? "-" : Model.task.finishDate)</dd>
                            <dt>Fecha completado</dt><dd>@Html.Raw(Model.task.completedDate == null || Model.task.completedDate == "" ? "-" : Model.task.completedDate)</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.task.isProcess == "True")
        {
            string isAnswerButtonEnabled = "disabled";
            string isBifurcateButtonEnabled = "disabled";
            string isPauseButtonEnabled = "disabled";
            bool isFormAnswered = false;
            if (Model.taskState.id_taskState == "1" || Model.taskState.id_taskState == "0")
            {
                isBifurcateButtonEnabled = "";
            }
            if (Model.taskState.id_taskState == "1")
            {
                isPauseButtonEnabled = "";
            }
            <div class="row">
                <div class="col-xs-12 col-md-offset-3 col-md-6">
                    <div class="col-xs-4 text-center">
                        @if (Model.taskType.formNeeded == "True")
                        {
                            //verify if is assigned to someone
                            if (Model.formQuestionsModel.addFormUsersModel.formUsersModel.formUsers.Count > 0)
                            {
                                isAnswerButtonEnabled = "disabled";
                                foreach (var user in Model.formQuestionsModel.addFormUsersModel.formUsersModel.formUsers)
                                {
                                    if ((user.user_id == Request.Cookies["user_id"].Value &&   Model.taskType.formNeeded == "True"))
                                    {
                                        if (user.isAnswered == "True")
                                        {
                                            isAnswerButtonEnabled = "disabled";
                                        }
                                        else
                                        {
                                            isAnswerButtonEnabled = "";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                //any can respond
                                if (Model.formQuestionsModel.usersAnswered.Count > 0)
                                {
                                    isAnswerButtonEnabled = "disabled";

                                }
                                else
                                {
                                    isAnswerButtonEnabled = "";
                                }
                            }

                            isFormAnswered = Model.formQuestionsModel.usersAnswered.Count > 0 ? true:false;
                            if (!isFormAnswered)
                            {
                                <button type="button" class="btn btn-success" onclick="openAnswerModal('@Model.taskType.formNeeded','@Model.task.id_task')" @isAnswerButtonEnabled>Responder</button>
                            }
                            else
                            {
                                foreach (var user in Model.taskResponsablesModel.responsables)
                                {
                                    if (user.user_id == Request.Cookies["user_id"].Value && user.isConfirmed == "False" && Model.taskState.id_taskState == "1")
                                    {
                                        isAnswerButtonEnabled = "";
                                    }
                                }
                                <button type="button" class="btn btn-success" onclick="openAnswerModal('False','@Model.task.id_task')" @isAnswerButtonEnabled>Responder</button>                            
                            }
                        }
                        else
                        {
                            foreach (var user in Model.taskResponsablesModel.responsables)
                            {
                                if (user.user_id == Request.Cookies["user_id"].Value && user.isConfirmed == "False" && Model.taskType.formNeeded == "False" && Model.taskState.id_taskState == "1")
                                {
                                    isAnswerButtonEnabled = "";
                                }
                            }
                            <button type="button" class="btn btn-success" onclick="openAnswerModal('@Model.taskType.formNeeded','@Model.task.id_task')" @isAnswerButtonEnabled>Responder</button>
                        }
                    </div>
                    <div class="col-xs-4 text-center">
                        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#modal_newProccess" @isBifurcateButtonEnabled>Bifurcar</button>
                    </div>
                    <div class="col-xs-4 text-center">
                        <button type="button" class="btn btn-danger" @isPauseButtonEnabled>Pausar</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@{ Html.RenderPartial("/Views/Processes/_Index/_AddProcess.cshtml", new Model.AddProcessModel("_BifurcateProcess", Model.stageDTO.processManagment_id)); }
@if (Model.taskType.formNeeded == "True")
{
    { Html.RenderPartial("/Views/Tasks/_Tasks/_TaskDetails/_AnswerTaskForm.cshtml", Model);}
}
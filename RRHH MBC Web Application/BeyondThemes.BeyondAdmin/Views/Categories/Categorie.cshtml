@model Model.CategorieModel
@{
    Layout = "~/Views/Shared/_Default.cshtml";
    ViewBag.Title = "Categoria Vacaciones";
    ViewBag.Description = "Lista de categorías";
}

<div class="row">
    <div class="col-xs-12">
        <div class="tabbable">
            <ul class="nav nav-tabs" id="myTab">
                <li class="active">
                    <a data-toggle="tab" href="#info-tab">
                        Información General
                    </a>
                </li>

                <li class="tab-red">
                    <a data-toggle="tab" href="#generalAttributes-tab">
                        Atributos Generales
                    </a>
                </li>
                <li class="tab-red">
                    <a data-toggle="tab" href="#personalAttributes-tab">
                        Atributos Personales
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div id="info-tab" class="tab-pane in active">
                    <div class="row">
                        <div class="col-xs-12">
                            @{Html.RenderPartial("/Views/Categories/_CategorieInfo.cshtml", Model);}
                        </div>
                    </div>
                </div>

                <div id="generalAttributes-tab" class="tab-pane">
                    @{Html.RenderPartial("/Views/Categories/_CategorieGeneralAtr.cshtml", new Model.GeneralAttributesModel(Model.categorie.id_categorie)); }
                </div>
                <div id="personalAttributes-tab" class="tab-pane">
                    <div class="row">
                        <div class="col-xs-12">
                            @{Html.RenderPartial("/Views/Categories/_CategoriePersonalAtr.cshtml"); }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal to edit categorie -->
@{ Html.RenderPartial("/Views/Categories/_EditCategorie.cshtml", new Model.EditCategorieModel(Model.categorie.id_categorie));}




@section PageScripts{
    <script>
        //-- Categorie Deleted
        function CategorieDeletedSuccess(content) {
            Notify("La categoría ha sido agregada con éxito", 'bottom-right', '5000', 'success', 'fa-edit', true);
            window.location.href = "/Categories";
        }
        function CategorieDeletedFailure(content) {
            Notify("Error, no se puede borrar la categoría", 'bottom-right', '5000', 'danger', 'fa-edit', true);
        }
        //-- General Attrbute Added
        function GeneralAttributeAddedSuccess(content) {
            Notify("El atributo ha sido agregado con éxito", 'bottom-right', '5000', 'success', 'fa-edit', true);
            var table = $('#table-generalAttributes > tbody');
            table.children().not(':last').remove()
            table.prepend(content);
            //$("#generalAttributes-tab").html(content);

        }
        function GeneralAttributeAddedFailure(content) {
            Notify(content.statusText, 'bottom-right', '5000', 'danger', 'fa-edit', true);
        }
        //-- General Attrbute Edit
        function GeneralAttributeEditSuccess(content) {
            Notify("El atributo ha sido editado con éxito", 'bottom-right', '5000', 'success', 'fa-edit', true);
        }
        function GeneralAttributeEditFailure(content) {
            Notify("Error, no se puede editado el atributo", 'bottom-right', '5000', 'danger', 'fa-edit', true);
        }
        //-- Categorie Edited
        function CategorieEditedSuccess(categorieDTO) {
            Notify("La categoría ha sido editada con éxito", 'bottom-right', '5000', 'success', 'fa-edit', true);
            $("#info-tab #CategorieTitle strong").text("Categoría "+categorieDTO.name)
            $("#info-tab #CategorieDescription").text(categorieDTO.description)
            if (categorieDTO.isEnabled === "True") {
                $("#info-tab #isEnabled").text("Habilitado").removeClass("label-danger").addClass("label-success")
            } else{ 
                $("#info-tab #isEnabled").text("Deshabilitado").removeClass("label-success").addClass("label-danger")
            }
        }
        function CategorieEditedFailure(content) {
            Notify("Error, no se puede editar la categoría", 'bottom-right', '5000', 'danger', 'fa-edit', true);
        }

        // General attributes type change
        function onGeneralAttrChange(self) {
            var selectedText = $(self).find("option:selected").text();
            var valueColumn = $(self).parent().next();
            if (selectedText === "Lista") {
                valueColumn.find("input").prop("disabled", true)
                valueColumn.find("input").val(null)
            } else {
                valueColumn.find("input").prop("disabled", false)
            }
        }

        //-- Ajax to delete General attribtue
        function deleteGeneralAttribute(attribute_id, name, element) {
            $.ajax({
                url: "/Categories/_DeleteGeneralAttribute/?id_attribute=" + attribute_id,
                type: "DELETE",
                dataType: "html",
                traditional: true,
                contentType: false,
                success: function (data) {
                    Notify("El atributo '" + name + "' ha sido removido", 'bottom-right', '5000', 'success', 'fa-edit', true);
                    $(element).closest("tr").hide(300, function () {
                        widget.remove();
                    });
                },
                error: function () {
                    Notify("Error, no se puede remover el atributo '" + name + "'", 'bottom-right', '5000', 'danger', 'fa-edit', true);
                }
            });
        }
        function updateGeneralAttribute(event, element) {
            event.preventDefault()
            var form = $(element).closest("tr").children().first()
            var token = "__RequestVerificationToken=" + $('input[name="__RequestVerificationToken"]').val() + "&";
            var lengthFormData = form.serialize().length
            formData = token + form.serialize().substring(token.length, lengthFormData)
            console.log(form.serialize());
            console.log(token);
            $.ajax({
                headers: {
                    'X-HTTP-Method-Override': 'PUT'
                },
                url: "/Categories/_EditGeneralAttribute",
                method:"PUT",
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                data: formData + "&X-Requested-With=XMLHttpRequest&X-HTTP-Method-Override=PUT",
                success: function (data) {
                    Notify("El atributo '" + name + "' ha sido removido", 'bottom-right', '5000', 'success', 'fa-edit', true);
                    $(element).closest("tr").hide(300, function () {
                        widget.remove();
                    });
                    return true;
                },
                error: function () {
                    Notify("Error, no se puede remover el atributo '" + name + "'", 'bottom-right', '5000', 'danger', 'fa-edit', true);
                    return false;
                }
            });
        }
    </script>
}
@model Model.GeneralAttributesModel

@for (int iAttr = 0; iAttr != Model.generalAttributesModel.Count; iAttr++)
{
    using (Ajax.BeginForm("_EditGeneralAttribute", "Categories", new AjaxOptions { HttpMethod = "PUT", OnSuccess = "GeneralAttributeEditSuccess", OnFailure = "GeneralAttributeEditFailure" }))
    {
        @Html.AntiForgeryToken()
    <tr>
        <td style="padding-left:10px;padding-right:50px">
            @Html.TextBoxFor(m => m.generalAttributesModel[iAttr].attribute, new { @class = "form-control", @placeholder = "", @style = "min-width:30rem" })
            @Html.ValidationMessageFor(m => m.generalAttributesModel[iAttr].attribute, "", new { @class = "text-danger" })
        </td>
        <td style="width:15%;padding-right:50px">
            @Html.DropDownListFor(m => m.generalAttributesModel[iAttr].id_type, Model._TypeSelect, new { @class = "form-control", @style = "min-width:20rem", @onchange = "onGeneralAttrChange(this)" })
        </td>
        <td style="padding-left:10px;padding-right:30px">
            @Html.TextBoxFor(m => m.generalAttributesModel[iAttr].value, new { @class = "form-control", @placeholder = "", @style = "min-width:40rem" })
            @Html.ValidationMessageFor(m => m.generalAttributesModel[iAttr].value, "", new { @class = "text-danger" })
        </td>
        <td style="padding-left:30px">
            <div class="form-group">
                <div class="checkbox" style="margin:0px">
                    <label style="margin-left:15px">
                        @Html.CheckBoxFor(m => m.generalAttributesModel[iAttr].isEnabled, new { @checked = "checked", @class = "colored-success" })
                        <span class="text"></span>
                    </label>
                </div>
            </div>
        </td>
        <td style="width:10%">
            <button class="btn btn-sky btn-sm" type="submit" style="margin-right:20px">
                <span class="glyphicon glyphicon-floppy-saved"></span>
            </button>
            <a class="btn btn-danger btn-sm btn-remove">
                <span class="glyphicon glyphicon-minus"></span>
            </a>
        </td>
    </tr>
    }
}

@*<tr>
    <td style="padding-left:10px;padding-right:50px">
        @Html.TextBoxFor(m => m.attribute, new { @class = "form-control", @placeholder = "", @style = "min-width:30rem" })
        @Html.ValidationMessageFor(m => m.attribute, "", new { @class = "text-danger" })
    </td>
    <td style="width:15%;padding-right:50px">
        @Html.DropDownListFor(m => m.id_type, Model._TypeSelect, new { @class = "form-control", @style = "min-width:20rem", @onchange= "onGeneralAttrChange(this)" })
    </td>
    <td style="padding-left:10px;padding-right:30px">
        @Html.TextBoxFor(m => m.value, new { @class = "form-control", @placeholder = "", @style = "min-width:40rem" })
        @Html.ValidationMessageFor(m => m.value, "", new { @class = "text-danger" })
    </td>
    <td style="padding-left:30px">
        <div class="form-group">
            <div class="checkbox" style="margin:0px">
                <label style="margin-left:15px">
                    @Html.CheckBoxFor(m => m.isEnabled, new { @checked = "checked", @class="colored-success"})
                    <span class="text"></span>
                </label>
            </div>
        </div>
    </td>
    <td style="width:10%">
        <button class="btn btn-sky btn-sm" type="button" style="margin-right:20px">
            <span class="glyphicon glyphicon-floppy-saved"></span>
        </button>
        <button class="btn btn-danger btn-sm btn-remove" type="button">
            <span class="glyphicon glyphicon-minus"></span>
        </button>
    </td>
</tr>*@
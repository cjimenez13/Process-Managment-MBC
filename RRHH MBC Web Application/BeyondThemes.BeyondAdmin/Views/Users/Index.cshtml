@{
    ViewBag.Title = "Grupos y personas";
    ViewBag.Description = "Grupos y personas";
    Layout = "~/Views/Shared/_Default.cshtml";
}
<div class="row">
    <div class="col-xs-12">
        <div class="tabbable">
            <ul class="nav nav-tabs" id="myTab5">
                <li class="active">
                    <a data-toggle="tab" href="#groupsTab">
                        Grupos
                    </a>
                </li>
                <li class="tab-red">
                    <a data-toggle="tab" href="#usersTab">
                        Personas
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="groupsTab" class="tab-pane in active">
                    @{Html.RenderPartial("/Views/Users/_Index/_GroupsList.cshtml", new Model.GroupsListModel()); }
                </div>
                <div id="usersTab" class="tab-pane">
                    @{Html.RenderPartial("/Views/Users/_Index/_UsersList.cshtml", new Model.ListUserModel()); }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal to add new group-->
@{ Html.RenderPartial("/Views/Users/_Index/_AddGroup.cshtml");}
<!-- Modal register user -->
@{Html.RenderPartial("/Views/Users/_Index/_Register.cshtml", new Model.RegisterModel()); }

@section PageScripts{
<!--Jquery Select2-->
<script src="~/assets/js/select2/select2.js"></script>
<script src="~/assets/js/toastr/toastr.js"></script>
<script>


</script>
<script>
    //--Jquery Select2--
    $("#e2").select2({
        placeholder: "Select a State",
        allowClear: true
    });
</script>
<script>
    // script to change the content on cantones select 
    $(document).ready(function () {
        $('#selectPronvices').change(function () {
            var id = $("#selectPronvices").val();
            $.ajax({
                url: '@Url.Action("getCantones", "Users")',
                type: 'get',
                data: { "pProvinceID": id },
                success: function (json, textStatus) {
                    $("#selectCantones").empty();
                    json = json || {};
                    for (var i = 0; i < json.length; i++) {
                        $("#selectCantones").append('<option value="' + json[i].id + '">' + json[i].name + '</option>');
                    }
                    $("#selectCantones").prop("disabled", false);
                }
            });
        });
    });
</script>
<script>
    // script to filter the list of users 
    function filterUsers(element) {
        var value = $(element).val().toLowerCase();
        $("#userList").children().each(function () {
            if ($(this).text().toLowerCase().includes(value)) {
                $(this).show(300);
            }
            else {
                $(this).hide(300)
            }
        });
    }
</script> 
<script>
    var Imtech = {};
    Imtech.Pager = function () {
        this.currentPage = 1;
        this.numPages = function () {
            var numPages = 0;
            if (this.paragraphs != null && this.paragraphsPerPage != null) {
                numPages = Math.ceil(this.paragraphs.length / this.paragraphsPerPage);
            }
            return numPages;
        };
        this.showPage = function (page) {
            this.currentPage = page;
            var html = '';
            var count = 0
            this.paragraphs.slice((page - 1) * this.paragraphsPerPage,
                ((page - 1) * this.paragraphsPerPage) + this.paragraphsPerPage).each(function () {
                    html += '<div>'+ $(this).html() +'</div>';
                    count += 1;
                    if (count % 3 == 0) {
                        html += '<div class=row></div>'
                    }
                });
            $(this.pagingContainerPath).html(html);
            renderControls(this.pagingControlsContainer, this.currentPage, this.numPages());
        }
        var renderControls = function (container, currentPage, numPages) {
            nextPage = currentPage + 1;
            previousPage = currentPage - 1;
            var pagingControls = '<ul class="pagination">';
            if (currentPage == 1) {
                pagingControls += '<li class="disabled"><a href="#">«</a></li>';
            } else {
                pagingControls += '<li><a href="#" onclick="pager.showPage(' + previousPage + '); return false;" >«</a></li>';
            }
            for (var i = 1; i <= numPages; i++) {
                if (i != currentPage) {
                    pagingControls += '<li><a href="#" onclick="pager.showPage(' + i + '); return false;">' + i + '</a></li>';
                } else {
                    pagingControls += '<li class="active"><a href="#">'+i+' <span class="sr-only">(current)</span></a></li>';
                }
            }
            
            if (currentPage == numPages) {
                pagingControls += '<li class = disabled><a href="#">»</a></li></ul>';
            } else {
                pagingControls += '<li><a href="#" onclick="pager.showPage(' + nextPage + '); return false;" >»</a></li></ul>';
            }
            $(container).html(pagingControls);
        }
    }
    var pager = new Imtech.Pager();
    var groupContainers;
    $(document).ready(function () {
        groupContainers = $('#groupList').children();
        pager.paragraphsPerPage = 9; // set amount elements per page
        pager.pagingContainer = $('#groupList'); // set of main container
        pager.paragraphs = $('.groupWidget', pager.pagingContainer); // set of required containers
        pager.pagingControlsContainer = '#pagingControls';
        pager.pagingContainerPath = '#groupList';
        pager.showPage(1);
        $("[data-toggle='tooltip']").tooltip();
    });
    function filterGroups(pValue) {
        var value = pValue
        $(".widget-caption", groupContainers).each(function () {
            var groupBox = $(this).closest(".groupBox")
            if ($(this).text().toLowerCase().includes(value)) {
                groupBox.addClass('visible')
                groupBox.show();
            }
            else {
                groupBox.removeClass('visible')
                groupBox.hide()
            }
        });
        pager.paragraphs = $('.visible', groupContainers).parent() // set of required containers
        pager.showPage(1)
        $("[data-toggle='tooltip']").tooltip();
    }
    function deleteGroup(group_id, name, self) {
        $.ajax({
            url: "/Users/_DeleteGroup/?group_id=" + group_id,
            type: "DELETE",
            dataType: "html",
            traditional: true,
            contentType: false,
            success: function (data) {
                Notify("El grupo '" + name + "' ha sido borrado", 'bottom-right', '5000', 'success', 'fa-edit', true);
                //var toolbarLink = $(self);
                //var widget = toolbarLink.parents(".widget").eq(0).parent();
                var groupBox = $(self).closest('.groupBox')
                groupBox.hide(0, function () {
                    groupBox.remove();
                    id_groupBox = groupBox.attr('id')
                    groupContainers.find('#' + id_groupBox).remove()
                    pager.paragraphs = $('.visible', groupContainers).parent() // set of required containers
                    pager.showPage(1)
                    $("[data-toggle='tooltip']").tooltip();
                });
            },
            error: function () {
                Notify("Error, no se puede borrar el grupo '" + name + "'", 'bottom-right', '5000', 'danger', 'fa-edit', true);
            }
        });
    }
    function UserAddedSuccess(content) {
        Notify('El usuario se ha registrado con exito', 'bottom-right', '5000', 'success', 'fa-edit', true);
        $('#usersTab').html(content);
    }
    function UserAddedFailure(content) {
        Notify('Error, no se puede registrar el usuario', 'bottom-right', '5000', 'danger', 'fa-edit', true);
    }
    function GroupAddedSuccess(content) {
        Notify("El grupo ha sido agregado", 'bottom-right', '5000', 'success', 'fa-edit', true);
        $('#groupsTab').html(content);
        groupContainers = $('#groupList').children();
        pager.paragraphsPerPage = 9; // set amount elements per page
        pager.pagingContainer = $('#groupList'); // set of main container
        pager.paragraphs = $('.groupWidget', pager.pagingContainer); // set of required containers
        pager.pagingControlsContainer = '#pagingControls';
        pager.pagingContainerPath = '#groupList';
        pager.showPage(1);
        $("[data-toggle='tooltip']").tooltip();

    }
    function UserAddedFailure(content) {
        Notify("Error, no se puede agregar el grupo", 'bottom-right', '5000', 'danger', 'fa-edit', true);
    }
</script>
}